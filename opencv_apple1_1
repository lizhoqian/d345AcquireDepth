"""在这个示例代码中，我添加了center_x和center_y两个变量来表示中心坐标。你可以根据需要修改这两个变量的值，以便调整偏差的计算。"""
import cv2 as cv
import numpy as np
import imutils
import serial
ser = serial.Serial("COM6", 115200, timeout=0.2)  

cap = cv.VideoCapture(0)
lower_red = np.array([147, 179, 102])  
upper_red = np.array([178, 253, 255])

# 设置中心坐标
center_x = 150
center_y = 200

while True:
    _, frame = cap.read()
    frame = imutils.resize(frame, width=300)
    blurred = cv.GaussianBlur(frame, (11, 11), 0)
    hsv = cv.cvtColor(blurred, cv.COLOR_BGR2HSV)
    mask = cv.inRange(hsv, lower_red, upper_red)
    mask = cv.erode(mask, None, iterations=2)
    mask = cv.dilate(mask, None, iterations=2)

    cnts = cv.findContours(mask.copy(), cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE)[-2]

    if len(cnts) > 0:
        c = max(cnts, key=cv.contourArea)
        ((xc, yc), radius) = cv.minEnclosingCircle(c)
        rect = cv.minAreaRect(c)
        box = cv.boxPoints(rect)
        M = cv.moments(c)
        center = (int(M["m10"] / M["m00"]), int(M["m01"] / M["m00"]))
        if radius > 10:
            cv.drawContours(frame, [np.int0(box)], -1, (0, 255, 255), 2)
            cv.circle(frame, center, 5, (0, 0, 255), -1)

            x_offset = int(xc - center_x)  
            y_offset = int(yc - center_y)
            print("x方向偏差：",x_offset)
            print("y方向偏差：",y_offset)
            if abs(x_offset) < 10:
                x_offset = 0
            elif x_offset > 0:
                x_offset = 0x01
            else: 
                x_offset = 0x00

            if abs(y_offset) < 10:
                y_offset = 0
            elif y_offset > 0:  
                y_offset = 0x01
            else:
                y_offset = 0x00

            flag = 1  

            data_packet = bytearray([0xAA, flag, x_offset, y_offset, 0x22])
            ser.write(data_packet)

    cv.imshow('frame', frame)

    if cv.waitKey(1) & 0xFF == ord('q'):
        break

cv.destroyAllWindows()
cap.release()
ser.close()


import serial
#打开茶串口1 用于接收
ser1 = serial.Serial('/dev/ttyUSB0',115200)
# 打开串口2，用于发送数据
ser2 = serial.Serial('/dev/ttyUSB1', 4000000)
data_speed = [0xFE, 0xEE, 0x10, 0x00, 0x00, 0x53, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x8C, 0x6C]
# data1_bytes = bytes(data1)

# while True:
#    # 读取数据
#     data1 = []
#     while len(data1) < 17:  # 假设要接收17个字节的数据
#         if ser1.in_waiting > 0:
#             byte = ser1.read(1)  # 一次读取一个字节
#             data1.append(byte[0])

#     # 打印接收到的数据
#     print('Received:', data1)

#     # 发送数据
#     ser2.write(bytes(data1))

# # 关闭串口
# ser1.close()
# ser2.close()
while True:
    # 读取数据
    # data1 = []
    # while len(data1) < 17:  # 假设要接收17个字节的数据
    #     if ser1.in_waiting > 0:
    #         byte = ser1.read(1)  # 一次读取一个字节
    #         data1.append(byte[0])

    #         # 检查前两个字节是否满足要求
    #         if len(data1) >= 2 and (data1[0] != 0xFE or data1[1] != 0xEE):
    #             data1 = []  # 丢弃数据
    #             print("丢弃")
    #             break

    # # 如果满足要求，打印接收到的数据并发送数据
    # if len(data1) == 17:
    #     print('Received:', data1)
    #     ser2.write(bytes(data1))

    # 检查是否有数据可供读取
    if ser1.in_waiting > 0:
        # 读取数据
        data1 = ser1.read(ser1.in_waiting)

        # 检查前两个字节是否满足要求
        if len(data1) >= 2 and data1[0] == 0xFE and data1[1] == 0xEE:
            # 打印接收到的数据
            print('Received:', data1)

            # 发送数据
            ser2.write(data1)

# 关闭串口
ser1.close()
ser2.close()
